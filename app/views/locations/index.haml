-content_for(:head) do
  =javascript_include_tag:"jquery.colorPicker"

:javascript
  $(function(){
    var viewModel =  locationsViewModel();
    ko.applyBindings(viewModel);
  });

  function LocationModel(viewModel){
    this.id = ko.property();
    this.code = ko.property();
    this.name = ko.property();
    this.address = ko.property();
    this.city = ko.property();
    this.state = ko.property();
    this.color = ko.property();

    // functions
    this.edit = function(){
      viewModel.activeLocation(this);
      $("#locationDialog").dialog({title:"Edit Location"});
      $('#color').colorPicker();
    }

    this.cancel = function(){
      viewModel.activeLocation.reset();
      $("#locationDialog").dialog("close");
    }

    this.save = function(){
      var wrapper = this;
      var id = wrapper().id;
      if(!id()){
        // create the record
        wrapper.save("locations/new.json", function(result){
            viewModel.locations.push(wrapper());
            $("#locationDialog").dialog("close");
            $.growlUI("Location Created"); 
        });
      } else {
        // save existing record
        wrapper.save("locations/" + id() + ".json", function(result){
              $("#locationDialog").dialog("close");
              $.growlUI("Location Saved"); 
        });
      }
    }
  }

  var locationsViewModel = function(){
    this.locations = ko.observableArray([]);
    this.activeLocation = ko.model();
    this.numberFilter = new ko.observable("");
    this.showInactive = new ko.observable(false);

    this.displayCount = ko.dependentObservable(function() {
      return this.locations().length;
    }, this);

    this.newLocation = function() {
      aNewLocation = new LocationModel(this);
      aNewLocation.edit();
    };

    // Load the initial state from server
    
    this.load = function() {
      var self = this;
      $.get("locations.json", function(data) {
        var allLocations = ko.mapToModelList(LocationModel, data, self);
        self.locations(allLocations);
      });
    }
    
    load();
  }

#locationDialog{ :style=>"display:none;"}
  %div{:'data-bind' => "template: {name:'locationForm', data: activeLocation}"}

%script{:type => "text/x-jquery-tmpl", :id => "locationForm"}
  .flash
    .message.error{:'data-bind' => "visible: activeLocation.hasErrors()"}
      Errors occurred while saving the location.
  %form.form{:id => 'locationForm', :'data-bind' => 'submit:save'}
    .group
      %label{:for=>:code}Code:
      %span.error{:'data-bind' => "text: code.errors"}
      %br
      %input.required{:'data-bind' => "value: code.temp"}
    .group
      %label{:for=>:name}Name:
      %span.error{:'data-bind' => "text: name.errors"}
      %br
      %input.required{:'data-bind' => "value: name.temp"}
    .group
      %label{:for=>:address}Address:
      %span.error{:'data-bind' => "text: address.errors"}
      %br
      %input.required{:'data-bind' => "value: address.temp"}
    .group
      %label{:for=>:city}City:
      %span.error{:'data-bind' => "text: city.errors"}
      %br
      %input.required{:'data-bind' => "value: city.temp"}
    .group
      %label{:for=>:city}State:
      %span.error{:'data-bind' => "text: state.errors"}
      %br
      %input.required{:'data-bind' => "value: state.temp"}
    .group
      %label{:for=>:color}Color:
      %span.error{:'data-bind' => "text: color.errors"}
      %input#color{:type=>"text", :'data-bind'=> 'value: color.temp'}  
    %button.form_button{:type => 'submit'}
      Save
    &nbsp;&nbsp;|&nbsp;&nbsp;
    =link_to("Cancel", "", :class => :button_to, :'data-bind' => "click : cancel")

%script{:type => "text/x-jquery-tmpl", :id => "locationRow"}
  %td
    %span{:'data-bind' => "text: code"}
  %td
    %span{:'data-bind' => "text: name"}
  %td
    %span{:'data-bind' => "text: address"}
  %td
    %span{:'data-bind' => "text: city"}
  %td
    %div{:class=>'color_swatch', :'data-bind' => "style: {backgroundColor: color()}"}
  %td.last
    %span{:'data-bind' => "click: edit, clickBubble: false"}
      =image_tag 'page_white_edit.png'

.block
  .content
    #title
      %h2 Locations
    #title-menu
      %button#new{:href => "", :'data-bind' => "click : newLocation, icon: 'ui-icon-plus'"}
        New
      %button#reload{:href => "", :'data-bind' => "click : load, icon: 'ui-icon-refresh'"}
        Reload
    .inner
      %table.table{:'data-bind' =>  "dataTable: { dataSource: locations, rowTemplate: 'locationRow', columns: ['code', 'name', 'address', 'city', 'color', null], 
                                         options:{sPaginationType:'full_numbers', } }"}
        %thead
          %th.first=mat(:location, :code)
          %th=mat(:location, :name)
          %th=mat(:location, :address)
          %th=mat(:location, :city)
          %th=mat(:location, :color)
          %th.last="&nbsp;"