:javascript
  $(function(){
    $("button.print").button({icons: {
      primary: "ui-icon-print"
    }});
    $("button#mode").button({icons: {
      secondary: "ui-icon-triangle-1-s"
    }}).next().menu({
        select: function(event, ui) {
            $(this).hide();
        }
    }).popup();

    $("#lot_number").focus();


    $("#lot").validate({
       // the remote valation isn't playing well with onkeyup
       onkeyup: false,
       submitHandler: function() {
         viewModel.addLot();
       },
       errorPlacement: function(error, element) {
         var errorDiv = element.next();
         error.appendTo(errorDiv);
       },
       highlight: function(element, errorClass, validClass) {
         $(element).addClass(errorClass).removeClass(validClass);
         var errorDiv = $(element).next();
         $(errorDiv).show();
       },
       unhighlight: function(element, errorClass, validClass) {
         if(element != null){
           $(element).removeClass(errorClass).addClass(validClass);
           var errorDiv = $(element).next();
           $(errorDiv).hide();
         }
       }
    });
    jQuery.validator.addMethod("uniqueLot", function(value, element) {
        return !viewModel.lotNumberExists(value);
    }, "Duplicate lot");
    $("#lot_number").rules("add", {uniqueLot : true} );
    ko.applyBindings(viewModel);
 
  });

  models.Lot.prototype.remove = function(){
      var self = this;
      $.post("lots/destroy/" + this.id(), function() {
          viewModel.lots.remove(function(item) { return item.id() == self.id() });
      });
  }

  var viewModel = {
      autoNumber: new ko.observable(false),
      currentLot: new ko.observable(new models.Lot()),
      lastErrorsFull: new ko.observable(""),
      lots: new ko.observableArray([]),
      addLot: function() {
        $.ajax({
          url:  "lots/new.json",
          type: "post",
          data: ko.toJSON(viewModel.currentLot()),
          contentType: "application/json",
          success: function(result) {
            if(result.errors){
              viewModel.lastErrorsFull(result.errors_full);
            } else {
                viewModel.lastErrorsFull("");
                viewModel.lots.unshift(models.parseLot(result));
           
                viewModel.currentLot().reset();
                if(viewModel.autoNumber()){
                    viewModel.currentLot().number(nextLotNumber());
                    $('#lot_consignee').focus();
                } else {
                    $('#lot_number').focus();
                }
            }
          }
        });
      },
      lotNumberExists: function(number) {
        for(x in this.lots()){
          if(this.lots()[x].number() == number) return true;
        }
        return false;
      }
  };

  $.get("lots.json", function(data) {
    var allLots = $.map(data, function(json) {
      return new models.Lot(json.id, json.number, json.consignee_id, json.description, json.qty_available);
    });
    viewModel.lots(allLots);
  });

  var applyLotNumber = function(){
    if(!viewModel.autoNumber()){
      viewModel.currentLot().number("");
    } else {
      viewModel.currentLot().number(nextLotNumber());
    }
  }

  var nextLotNumber = function(){
    
    var max = 0;
    for(x in viewModel.lots()){
      var val = parseInt(viewModel.lots()[x].number());
      if(!isNaN(val) && val > max){
        max = val;
      }
    }
    return max+1;
  };

-content_for(:context_panel) do
  #options.block
    %h3 Options
    .content
      %form.form
        .group
          %label Auto-number?
          %input{:type => 'checkbox', :'data-bind' => 'checked: autoNumber, click: applyLotNumber()'}

.flash
  .message.error{:'data-bind' => "text: lastErrorsFull, visible: lastErrorsFull() != ''"}
.block
  .content
    #title
      %h2.title #{@auction.title} :: Lots
    #title-menu
      %button.print{:onClick => "window.open('lots/catalog.pdf','mywindow','width=600,height=800')"}
        View/Print Catalog
      %button#mode
        Entry Mode
      %ul{:style => 'width: 130px'}
        %li
          %a{:href => '#direct'}
            Direct Rapid
        %li
          %a{:href => '#catalog'}
            Catalog Rapid
    .inner
      %form.form{:id => 'lot',:method => 'post', :action=> "/auctions/#{@auction.id}/lots/new"}
        %table.table
          %thead
            %tr
              %th.first Lot #
              %th Consginee
              %th Description
              %th Qty.
              %th.last
            %tr
              %td{:valign => 'top'}
                %input.text_field.required{:id => 'lot_number', :type => 'text', 
                       :name => 'lot[number]', :class => "text_field", :style => "width:50px",
                       :'data-bind' => "value: currentLot().number"  }
                .floating-error
              %td{:valign => 'top'}
                %input.text_field{:type => 'hidden', :name => 'lot[consignee_id]',
                        :'data-bind'=>'value:currentLot().consignee_id'}
                %input.text_field.required{:id => 'lot_consignee', :name => 'lot[consignee]',
                       :style => "width:50px", :'data-bind'=>'value:currentLot().consignee_code'}
                
                .floating-error
                %br
                %span{:'data-bind' => 'text:currentLot().consignee_text()'}
              %td{:valign => 'top'}
                %textarea.text_area.required{:id => 'lot_description', :name => 'lot[description]',
                       :style => "width:200px", :'data-bind'=>'value:currentLot().description' }
                .floating-error
              %td{:valign => 'top'}
                %input.text_field.required{:id => 'qty', :type => 'text',
                       :name => 'lot[qty_available]', :style => "width:30px", :'data-bind'=>'value:currentLot().qty_available' }
                .floating-error
              %td{:valign => 'top'}
                %input.form_button{:id => 'submit', :type => 'submit', :name => 'Submit',:tabindex => "4"}
          %tbody{:'data-bind'=>'template: { name: "lotsListTemplate", foreach: lots }'}

%script{:type => "text/html", :id => "lotsListTemplate"}
  %tr
    %td
      %span{:'data-bind' => "text: number"}
    %td
      %span{:'data-bind' => "text: consignee_text"}
    %td
      %span{:'data-bind' => "text: description"}
    %td
      %span{:'data-bind' => "text: qty_available"}
    %td
      %span{:onClick => "event.stopPropagation();return false;", :'data-bind' => "click: remove"}
        =image_tag 'page_white_delete.png'
