:javascript
  $(function(){     
    $("#sale").validate({
       // the remote valation isn't playing well with onkeyup
       onkeyup: false,
       submitHandler: function() {
         viewModel.addSale();
       },
       errorPlacement: function(error, element) {
         var errorDiv = element.next();
         error.appendTo(errorDiv);
       },
       highlight: function(element, errorClass, validClass) {
         $(element).addClass(errorClass).removeClass(validClass);
         var errorDiv = $(element).next();
         $(errorDiv).show();
       },
       unhighlight: function(element, errorClass, validClass) {
         if(element != null){
           $(element).removeClass(errorClass).addClass(validClass);
           var errorDiv = $(element).next();
           $(errorDiv).hide();
         }
       },
       messages:{
         "sale[bidder]" : { remote : "Unregistered number" }
       }
     });
    reset();
    ko.applyBindings(viewModel);
  });

  reset = function(){
    // TODO : kind of a weird mish-mash between dom and view-model handling.
    viewModel.lastErrorsFull("");
    $('#sale')[0].reset();
    $('#qty').val('1');
    $('#lot').focus();
    viewModel.currentLot("");
  }
  
  var viewModel = {
      currentLot: new ko.observable(""),
      lastErrorsFull: new ko.observable(""),
      sales: new ko.observableArray(#{@auction.sales.nil? ? '[]' : @auction.sales.to_json}.reverse()),
      lots : #{@auction.lots.nil? ? '[]' : @auction.lots.to_json},
      addSale: function() {
        ajaxSubmit($("#sale"), function(results){
              if(results.errors){
                viewModel.lastErrorsFull(results.errors_full);
              } else {
                viewModel.sales.unshift(results);
                reset();
              }
        });
      }
  };

  viewModel.currentLotDescription = ko.dependentObservable(function() {
    for (var i = 0, j = this.lots.length; i < j; i++)
      if (this.lots[i].number == viewModel.currentLot())
        return this.lots[i].description;
    return "";
  }, viewModel);

.flash
  .message.error{:'data-bind' => "text: lastErrorsFull, visible: !nullOrEmpty(lastErrorsFull())"}
.block
  .content
    %h2.title #{@auction.title} :: Sales
    .inner
      %form.form{:id => 'sale',:method => 'post', :autocomplete => "false",
                 :action=>"/auctions/#{@auction.id}/sales/new"}
        %table.table
          %thead
            %tr
              %th.first Lot #
              %th Description
              %th Bidder
              %th Price
              %th Qty.
              %th.last
            %tr
              %td{:valign => 'top'}
                %input.text_field.required{:id => 'lot', :type => 'text',
                       :name => 'sale[lot]', :style => "width:50px",
                       :'data-bind' => "value:currentLot"}
                .floating-error
              %td{:valign => 'top'}
                %textarea.text_area.required.text_area{:name => 'sale[description]', 
                       :style => "width:200px", :'data-bind' => "text: currentLotDescription()"}
                .floating-error
              %td{:valign => 'top'}
                %input.text_field.required{:type => 'text', :name=> 'sale[bidder]', 
                      :remote => "sales/check_bidder_number", :style => "width:50px"}
                .floating-error
              %td{:valign => 'top'}
                %input.text_field.required{:type => 'text', :name => 'sale[price]', :style => "width:50px"}
                .floating-error
              %td{:valign => 'top'}
                %input.text_field.required{:id => 'qty', :type => 'text', :name => 'sale[quantity]', :style => "width:30px"}
                .floating-error
              %td.required{:valign => 'top'}
                %input.form_button{:id => 'submit', :type => 'submit', :name => 'Submit',:tabindex => "6"}
          %tbody{:'data-bind'=>'template: { name: "salesListTemplate", foreach: sales }'}

%script{:type => "text/html", :id => "salesListTemplate"}
  %tr
    %td
      %span{:'data-bind' => "text: lot"}
    %td
      %span{:'data-bind' => "text: description"}
    %td
      %span{:'data-bind' => "text: bidder"} 
    %td
      %span{:'data-bind' => "text: price"} 
    %td
      %span{:'data-bind' => "text: quantity"}
    %td
      =button_to( pat(:remove), "sales/destroy/${id}", :method => :delete, :class => :button_to)