:javascript
  $(function(){
    $("#lot_number").focus();
    $('#qty').val('1');

    $("#lot").validate({
       // the remote valation isn't playing well with onkeyup
       onkeyup: false,
       submitHandler: function() {
         viewModel.addLot();
       },
       errorPlacement: function(error, element) {
         var errorDiv = element.next();
         error.appendTo(errorDiv);
       },
       highlight: function(element, errorClass, validClass) {
         $(element).addClass(errorClass).removeClass(validClass);
         var errorDiv = $(element).next();
         $(errorDiv).show();
       },
       unhighlight: function(element, errorClass, validClass) {
         if(element != null){
           $(element).removeClass(errorClass).addClass(validClass);
           var errorDiv = $(element).next();
           $(errorDiv).hide();
         }
       }
    });
    jQuery.validator.addMethod("uniqueLot", function(value, element) {
        return !viewModel.lotNumberExists(value);
    }, "Duplicate lot");
    $("#lot_number").rules("add", {uniqueLot : true} );
    ko.applyBindings(viewModel);
  });

  var viewModel = {
      validateLot: function(){
        // Do pre-submit JS validation
        // TODO : implement
        return true;
      },
      lastErrorsFull: new ko.observable(""),
      lots: new ko.observableArray(#{@auction.lots.nil? ? '[]' : @auction.lots.to_json}.reverse()),
      addLot: function() {
        ajaxSubmit($("#lot"), function(results){
          if(results.errors){
            viewModel.lastErrorsFull(results.errors_full);
          } else {
            viewModel.lastErrorsFull("");
            viewModel.lots.unshift(results);
            $('#lot')[0].reset();
            $('#qty').val('1');
            $('#lot_number').focus();

          }
        });
      },
      lotNumberExists: function(number) {
        for(x in this.lots()){
          if(this.lots()[x].number == number) return true;
        }
        return false;
      }
  };
.flash
  .message.error{:'data-bind' => "text: lastErrorsFull, visible: lastErrorsFull() != ''"}
.block
  .secondary-navigation
    %ul.wat-cf
      %li.first.active=link_to pat(:record)
  .content
    %h2.title Auction :: #{@auction.title} :: Lots
    .inner
      %form.form{:id => 'lot',:method => 'post', :action=> "/auctions/#{@auction.id}/lots/new"}
        %table.table
          %thead
            %tr
              %th.first Lot #
              %th Description
              %th Qty.
              %th.last
            %tr
              %td{:valign => 'top'}
                %input.text_field.required{:id => 'lot_number', :type => 'text', 
                       :name => 'lot[number]', :class => "text_field", :style => "width:50px"  }
                .floating-error
              %td{:valign => 'top'}
                %textarea.text_area.required{:name => 'lot[description]', :style => "width:200px" }
                .floating-error
              %td{:valign => 'top'}
                %input.text_field.required{:id => 'qty', :type => 'text',
                       :name => 'lot[qty_available]', :style => "width:30px" }
                .floating-error
              %td{:valign => 'top'}
                %input.form_button{:id => 'submit', :type => 'submit', :name => 'Submit',:tabindex => "4"}
          %tbody{:'data-bind'=>'template: { name: "lotsListTemplate", foreach: lots }'}

%script{:type => "text/html", :id => "lotsListTemplate"}
  %tr
    %td
      %span{:'data-bind' => "text: number"}
    %td
      %span{:'data-bind' => "text: description"}
    %td
      %span{:'data-bind' => "text: qty_available"}
    %td
      =button_to( pat(:remove), "lots/destroy/${id}", :method => :delete, :class => :button_to,
                 :'data-bind' => "confirm:'Are you sure you want to remove this lot record?'")
