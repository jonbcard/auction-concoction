-content_for(:context_panel) do
  #filter.block
    %h3 Search Customers
    .content
      %form.form{:'data-bind' => 'submit: search().search'}
        .group
          %label Bidder Num:
          %br
          %input.text_field{:type => 'text', :style => "width:75px", :'data-bind'=>"value: search().bidder_number"}
        .group
          %label ID Number:
          %br
          %input.text_field{:type => 'text', :style => "width:75px", :'data-bind'=>"value: search().id_number" }
        .group
          %label Company:
          %br
          %input.text_field{:type => 'text', :style => "width:150px", :'data-bind'=>"value: search().company_name"  }
        .group
          %label First Name:
          %br
          %input.text_field{:type => 'text', :style => "width:150px", :'data-bind'=>"value: search().first_name"  }
        .group
          %label Last Name:
          %br
          %input.text_field{:type => 'text', :style => "width:150px", :'data-bind'=>"value: search().last_name" }
        .group
          %label Phone:
          %br
          %input.text_field{:type => 'text', :style => "width:150px", :'data-bind'=>"value: search().phone, mask:'(999) 999-9999'" }
        .group
          %label Email:
          %br
          %input.text_field{:type => 'text', :style => "width:150px", :'data-bind'=>"value: search().email" }
        %button.form_button{:type => "submit"}
          Search
        &nbsp;&nbsp;|&nbsp;&nbsp;
        =link_to("Clear", "#clear", :class => :button_to, :'data-bind'=>"click: search().clear")

:javascript
  $(function(){
    ko.applyBindings(viewModel());
  });

  function parseCustomers(viewModel, data){
    var results = $.map(data, function(json) {
        var cust = new Customer(viewModel, json.id);
        ko.mapToModel(cust, json);
        return cust;
    });
    return results;
  }

  var SearchCustomer = function(viewModel){
    var self = this;
    this.bidder_number = ko.observable();
    this.id_number = ko.observable();
    this.company_name = ko.observable();
    this.first_name = ko.observable();
    this.last_name = ko.observable();
    this.phone = ko.observable();
    this.email = ko.observable();
    
    this.clear = function(){
        self.bidder_number(null);
        self.id_number(null);
        self.company_name(null);
        self.first_name(null);
        self.last_name(null);
        self.phone(null);
        self.email(null);
    }

    this.search = function(){

       $.ajax({
          url:  "customers/search.json",
          type: "post",
          data: ko.toJSON(self),
          contentType: "application/json",
          success: function(result) {
            if(result.errors){
                alert("Error attempting to query server: " + ko.toJSON(result.errors));
            } else {
                viewModel.customers(parseCustomers(viewModel, result));
            }
          }
        });
    }
  }

  var Customer = function(viewModel, id){
    $.extend(this, models.BaseModel)

    this.id = ko.property(id);
    this.bidder_number = ko.property();
    this.company_name = ko.property();
    this.first_name = ko.property();
    this.last_name = ko.property();
    this.phone = ko.property();
    this.email = ko.property();
    this.address = ko.property();
    this.city = ko.property();
    this.state = ko.property();

    // functions
    this.edit = function(){
      viewModel.activeCustomer(this);
      $("#editDialog").dialog({title:"Edit Customer",width:"410px"});
    };

    this.cancel = function(){
      viewModel.activeCustomer.reset();
      $("#editDialog").dialog("close");
    };

    var self = this;
    this.save = function(){
      if(id == undefined){
        // create the record
        var self = this;
        $.ajax({
          url:  "customers/new.json",
          type: "post",
          data: ko.tempToJSON(this),
          contentType: "application/json",
          success: function(result) {
            if(result.errors){
              viewModel.activeCustomer.applyErrors(result.errors);
            } else {
              viewModel.activeCustomer.commit();
              viewModel.activeCustomer().id(result.id);
              viewModel.customers.push(viewModel.activeCustomer());
              viewModel.activeCustomer.reset();
              $("#editDialog").dialog("close");
              $.growlUI("Customer Created"); 
            }
          }
        });
      } else {
        // save the record
        $.ajax({
          url:  "customers/" + id + ".json",
          type: "post",
          data: ko.tempToJSON(this),
          contentType: "application/json",
          success: function(result) {
            if(result.errors){
              viewModel.activeCustomer.applyErrors(result.errors);
            } else {
              viewModel.activeCustomer.commit().reset();
              $("#editDialog").dialog("close");
              $.growlUI("Customer Saved"); 
            }
          }
        });
      }
    }
  }

  

  var viewModel = function(){
    this.customers = ko.observableArray([]);
    this.activeCustomer = ko.model();
    this.search = ko.observable(new SearchCustomer(this));

    this.newCustomer = function() {
      new Customer(this).edit();
    };
  }

#editDialog{ :style=>"display:none;"}
  %div{:'data-bind' => "template: {name:'editForm', data: activeCustomer}"}

%script{:type => "text/x-jquery-tmpl", :id => "editForm"}
  .flash
    .message.error{:'data-bind' => "visible: activeCustomer.hasErrors()"}
      Errors occurred while saving the customer record.
  %form.form{:id => 'editForm', :'data-bind' => 'submit : save'}
    =partial 'templates/customer_edit'
    %button.form_button{:type => "submit"}=pat(:save)
    &nbsp;&nbsp;|&nbsp;&nbsp;
    =link_to("Cancel", "", :class => :button_to, :'data-bind' => "click : cancel")

%script{:type => "text/x-jquery-tmpl", :id => "row"}
  %td
    %span{:'data-bind' => "text: company_name"}
  %td
    %span{:'data-bind' => "text: first_name"}
  %td
    %span{:'data-bind' => "text: last_name"}
  %td
    %span{:'data-bind' => "text: email"}
  %td
    %span{:'data-bind' => "text: bidder_number"}
  %td.last
    %span.clickable{:'data-bind' => "click: edit"}
      =image_tag 'page_white_edit.png'

.block
  .content
    #title
      %h2 Customers
    #title-menu
      %button#new{:href => "#new", :'data-bind' => "click : newCustomer, icon: 'ui-icon-plus'"}
        New
    .inner
      %table.table
      %table.table{:'data-bind' =>  "dataTable: { dataSource: customers, rowTemplate: 'row', columns: ['company_name', 'first_name', 'last_name', 'email', 'bidder_number',null], 
                                                  options:{sPaginationType:'full_numbers', bFilter : false, bLengthChange : false, 
                                                           iDisplayLength:20,
                                                           oLanguage : {sInfo: 'Showing _START_ to _END_ of _TOTAL_ search results.',
                                                                        sInfoEmpty: 'Showing 0 of 0 search results.' } } }"}
        %thead
          %th.first=mat(:customer, :company_name)
          %th=mat(:customer, :first_name)
          %th=mat(:customer, :last_name)
          %th=mat(:customer, :email)
          %th Bidder #
          %th.last="&nbsp;"